name: Build

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  ####### Check files and formatting #######

  check-copyright:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Find un-copyrighted files
        run: |
          find . -name '*.rs' -exec grep  -H -E -o -c Copyright {} \; | grep ':0' || true
          FILECOUNT=$(find . -name '*.rs' -exec grep  -H -E -o -c  'Copyright'  {} \; | grep -c ':0' || true)
          if [[ $FILECOUNT -eq 0 ]]; then
            true
          else
            false
          fi

  check-editorconfig:
    name: "Check editorconfig"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Setup editorconfig checker
        run: |
          ls /tmp/bin/ec-linux-amd64 || \
          cd /tmp && \
          wget https://github.com/editorconfig-checker/editorconfig-checker/releases/download/2.1.0/ec-linux-amd64.tar.gz && \
          tar xvf ec-linux-amd64.tar.gz && \
          chmod +x bin/ec-linux-amd64
      - name: Check files
        run: /tmp/bin/ec-linux-amd64

  check-rust-fmt:
    name: "Check with rustfmt"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      # With rustup's nice new toml format, we just need to run rustup show to install the toolchain
      # https://github.com/actions-rs/toolchain/issues/126#issuecomment-782989659
      - name: Setup Rust toolchain
        run: rustup show
      - name: Format code with rustfmt
        run: ./scripts/exec-each-rust-workspace.sh "cargo fmt -- --check"

  ####### TODO: Building and Testing rust code #######

  ####### Verifying tracing runtimes wasm blobs #######
  check-tracing-runtime-wasm:
    name: "Check tracing runtime wasm"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        spec_version: ["47", "49", "52", "53", "155", "300", "400"]
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            edited:
              - 'tracing/${{ matrix.spec_version }}/**'
      - name: "Check runtime tracing/${{ matrix.spec_version }}"
        if:  steps.filter.outputs.edited == 'true'
        run: |
          ./scripts/check-tracing-runtime.sh ${{ matrix.spec_version }}
